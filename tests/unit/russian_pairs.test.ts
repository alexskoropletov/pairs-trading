import { stockSymbols, imoexStocksFallback, rucbitrStocksFallback, rgbiStocksFallback } from '../../src/stock';
import logger from '../../src/logger';

async function testRussianPairsAnalysis() {
    logger.info('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ä —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ç–∏–∫–µ—Ä—ã
    const imoexSymbols = imoexStocksFallback.map(stock => stock.symbol);
    const rucbitrSymbols = rucbitrStocksFallback.map(stock => stock.symbol);
    const rgbiSymbols = rgbiStocksFallback.map(stock => stock.symbol);
    
    logger.info(`\nüìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ç–∏–∫–µ—Ä—ã:`);
    logger.info(`üá∑üá∫ IMOEX (${imoexSymbols.length}): ${imoexSymbols.slice(0, 10).join(', ')}${imoexSymbols.length > 10 ? '...' : ''}`);
    logger.info(`üß¨ RUCBITR (${rucbitrSymbols.length}): ${rucbitrSymbols.slice(0, 10).join(', ')}${rucbitrSymbols.length > 10 ? '...' : ''}`);
    logger.info(`üìà RGBI (${rgbiSymbols.length}): ${rgbiSymbols.slice(0, 10).join(', ')}${rgbiSymbols.length > 10 ? '...' : ''}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ç–∏–∫–µ—Ä—ã –µ—Å—Ç—å –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ
    const availableImoex = imoexSymbols.filter(symbol => stockSymbols.includes(symbol));
    const availableRucbitr = rucbitrSymbols.filter(symbol => stockSymbols.includes(symbol));
    const availableRgbi = rgbiSymbols.filter(symbol => stockSymbols.includes(symbol));
    
    logger.info(`\n‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:`);
    logger.info(`üá∑üá∫ IMOEX: ${availableImoex.length} –∏–∑ ${imoexSymbols.length}`);
    logger.info(`üß¨ RUCBITR: ${availableRucbitr.length} –∏–∑ ${rucbitrSymbols.length}`);
    logger.info(`üìà RGBI: ${availableRgbi.length} –∏–∑ ${rgbiSymbols.length}`);
    
    if (availableImoex.length > 0) {
        logger.info(`\nüá∑üá∫ –î–æ—Å—Ç—É–ø–Ω—ã–µ IMOEX —Ç–∏–∫–µ—Ä—ã: ${availableImoex.join(', ')}`);
    }
    
    if (availableRucbitr.length > 0) {
        logger.info(`\nüß¨ –î–æ—Å—Ç—É–ø–Ω—ã–µ RUCBITR —Ç–∏–∫–µ—Ä—ã: ${availableRucbitr.join(', ')}`);
    }
    
    if (availableRgbi.length > 0) {
        logger.info(`\nüìà –î–æ—Å—Ç—É–ø–Ω—ã–µ RGBI —Ç–∏–∫–µ—Ä—ã: ${availableRgbi.join(', ')}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const fs = require('fs-extra');
    const path = require('path');
    
    logger.info(`\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö...`);
    
    const tickersDir = 'tickers';
    const imoexDir = path.join(tickersDir, 'imoex');
    const rucbitrDir = path.join(tickersDir, 'rucbitr');
    const rgbiDir = path.join(tickersDir, 'rgbi');
    
    if (fs.existsSync(imoexDir)) {
        const imoexFiles = fs.readdirSync(imoexDir).filter((file: string) => file.endsWith('.csv'));
        logger.info(`üá∑üá∫ IMOEX —Ñ–∞–π–ª—ã: ${imoexFiles.length}`);
        if (imoexFiles.length > 0) {
            logger.info(`   –ü—Ä–∏–º–µ—Ä—ã: ${imoexFiles.slice(0, 5).join(', ')}`);
        }
    } else {
        logger.warn(`‚ö†Ô∏è –ü–∞–ø–∫–∞ IMOEX –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${imoexDir}`);
    }
    
    if (fs.existsSync(rucbitrDir)) {
        const rucbitrFiles = fs.readdirSync(rucbitrDir).filter((file: string) => file.endsWith('.csv'));
        logger.info(`üß¨ RUCBITR —Ñ–∞–π–ª—ã: ${rucbitrFiles.length}`);
        if (rucbitrFiles.length > 0) {
            logger.info(`   –ü—Ä–∏–º–µ—Ä—ã: ${rucbitrFiles.slice(0, 5).join(', ')}`);
        }
    } else {
        logger.warn(`‚ö†Ô∏è –ü–∞–ø–∫–∞ RUCBITR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${rucbitrDir}`);
    }
    
    if (fs.existsSync(rgbiDir)) {
        const rgbiFiles = fs.readdirSync(rgbiDir).filter((file: string) => file.endsWith('.csv'));
        logger.info(`üìà RGBI —Ñ–∞–π–ª—ã: ${rgbiFiles.length}`);
        if (rgbiFiles.length > 0) {
            logger.info(`   –ü—Ä–∏–º–µ—Ä—ã: ${rgbiFiles.slice(0, 5).join(', ')}`);
        }
    } else {
        logger.warn(`‚ö†Ô∏è –ü–∞–ø–∫–∞ RGBI –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${rgbiDir}`);
    }
    
    logger.info('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    logger.info('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    logger.info('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run prices –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    logger.info('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run pairs-trading –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ä');
    logger.info('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run infographic –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRussianPairsAnalysis().catch(error => {
    logger.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
}); 